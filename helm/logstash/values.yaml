# Default values for logstash.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

# k8s k3s eks ok39
environmentType: k3s

# hosts
hosts:
  ES_HOST: "https://abcdef0000111122223333.eu-central-1.aws.cloud.es.io:9243"

replicaCount: 1

image:
  repository: docker.elastic.co/logstash/logstash
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: "7.12.0"

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: false
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

services:
  type: ClusterIP
  svc:
    - name: pipeline01
      port: 5000
      targetport: 5000
      protocol: TCP
    - name: pipeline02
      port: 5001
      targetport: 5001
      protocol: TCP
  # type: NodePort
  #   - name: pipeline02
    #   port: 5001
    #   nodeport: 30611
    #   targetport: 5001
    #   externalTrafficPolicy: local
    #   protocol: UDP

ingress:
  enabled: false
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths: []
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

LS_JAVA_OPTS: "-Xmx1024m -Xms1024m"
resources:
  limits:
    cpu: 1
    memory: 1024Mi
  requests:
    cpu: 1
    memory: 1024Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}
