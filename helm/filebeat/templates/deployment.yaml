apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "curlbeat.fullname" . }}
  labels:
    {{- include "curlbeat.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "curlbeat.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "curlbeat.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "curlbeat.serviceAccountName" . }}
      volumes:
      - name: vollog
        persistentVolumeClaim:
          claimName: pvclog
      {{- $releaseName := .Release.Name -}}
      {{- range $path, $bytes := .Files.Glob (printf "config/**.yml") }}
      - name: {{ base $path | trimSuffix ".yml" }}
        configMap:
          defaultMode: 0755
          name: {{ $releaseName }}-configmap
          items:
          - key: {{ base $path }}
            path: {{ base $path }}
      {{- end }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: filebeat
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.filebeat }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          env:
            - name: CHART_NAME
              value: "{{ .Chart.Name }}"
            {{- range $k, $v := .Values.hosts }}
            - name: {{ $k }}
              value: "{{ $v }}"
            {{- end }}
            {{- range $path, $bytes := .Files.Glob "config/*.secret" }}
            {{- range $k := $.Files.Lines $path }}
            {{ $a := split ": " $k }}
            - name: {{ $a._0 }}
              valueFrom:
                secretKeyRef:
                  key: {{ $a._0 }}
                  name: {{ $releaseName }}-secret
              {{- end }}
            {{- end }}
          volumeMounts:
          {{- range $path, $bytes := .Files.Glob (printf "config/**.yml") }}
          - name: {{ base $path | trimSuffix ".yml" }}
            mountPath: {{ $path | trimPrefix "config" }}
            readOnly: false
            subPath: {{ base $path }}
          {{- end }}
          - name: vollog
            mountPath: /pvclog
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
        - name: logrotate
          image: "{{ .Values.image.logrotate }}"
          imagePullPolicy: Always
          command: 
          - bash
          - -c
          - 'while true; do /usr/sbin/logrotate --force --verbose /etc/logrotate.d/curlbeat.conf; sleep {{ .Values.logrotate }}; done'
          resources: {}
          volumeMounts:
          - name: vollog
            mountPath: /pvclog
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}